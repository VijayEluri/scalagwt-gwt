<project name="ant-gwt" default="build" basedir=".">
  <property name="gwt.root" location="../.." />
  <property name="project.tail" value="build-tools/ant-gwt" />
  <import file="${gwt.root}/common.ant.xml" />

  <fileset id="default.tests" dir="${javac.junit.out}">
    <include name="**/*Test.class" />
  </fileset>

  <target name="compile" description="Compiles this project">
    <mkdir dir="${javac.out}" />
    <gwt.javac>
      <classpath>
        <pathelement location="${gwt.tools.lib}/apache/ant-1.6.5.jar" />
      </classpath>
    </gwt.javac>
  </target>

  <target name="compile.tests" depends="build, compile.emma" description="Compiles the test code for this project">
    <mkdir dir="${javac.junit.out}" />
    <gwt.javac srcdir="test" destdir="${javac.junit.out}">
      <classpath>
        <pathelement location="${javac.out}" />
        <pathelement location="${gwt.tools.lib}/junit/junit-3.8.1.jar" />
      </classpath>
    </gwt.javac>
  </target>

  <target name="build" depends="compile" description="Packages this project into a jar">
    <mkdir dir="${gwt.build.lib}" />
    <!-- we can't use the gwt.jar macro, as it needs the gwt-ant.jar being packaged here -->
    <jar destfile="${gwt.build.lib}/${ant.project.name}.jar" duplicate="fail" filesonly="true" 
         index="true" update="true">
      <fileset dir="${javac.out}" />
      <fileset dir="src" />
    </jar>
  </target>

  <target name="test" depends="build, compile.tests" description="Run unit tests for this project.">
    <gwt.junit test.out="${junit.out}" test.cases="default.tests" />
  </target>

  <target name="checkstyle" description="Static analysis of source">
    <gwt.checkstyle>
      <fileset dir="src" />
    </gwt.checkstyle>
  </target>

  <target name="clean" description="Cleans this project's intermediate and output files">
    <delete dir="${project.build}" />
    <delete file="${project.lib}" />
  </target>

</project>
